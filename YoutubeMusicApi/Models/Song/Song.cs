using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Text;
using YoutubeMusicApi.Models.Generated;
using YoutubeMusicApi.Utils;

namespace YoutubeMusicApi.Models
{


    public class Song
    {
        [JsonProperty("videoId")]
        public string VideoId { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("lengthSeconds")]
        public string LengthSeconds { get; set; }

        [JsonProperty("keywords")]
        public List<string> Keywords { get; set; }

        [JsonProperty("channelId")]
        public string ChannelId { get; set; }

        [JsonProperty("isOwnerViewing")]
        public string IsOwnerViewing { get; set; }

        [JsonProperty("shortDescription")]
        public string ShortDescription { get; set; }

        [JsonProperty("isCrawlable")]
        public string IsCrawlable { get; set; }

        [JsonProperty("thumbnail")]
        public ThumbnailList Thumbnail { get; set; }

        [JsonProperty("averageRating")]
        public double AverageRating { get; set; }

        [JsonProperty("allowRatings")]
        public string AllowRatings { get; set; }

        [JsonProperty("viewCount")]
        public string ViewCount { get; set; }

        [JsonProperty("author")]
        public string Author { get; set; }

        [JsonProperty("isPrivate")]
        public string IsPrivate { get; set; }

        [JsonProperty("isUnpluggedCorpus")]
        public string IsUnpluggedCorpus { get; set; }

        [JsonProperty("isLiveContent")]
        public string IsLiveContent { get; set; }

        [JsonProperty("provider")]
        public string Provider { get; set; }

        [JsonProperty("artists")]
        public List<string> Artists { get; set; }

        [JsonProperty("copyright")]
        public string Copyright { get; set; }

        [JsonProperty("release")]
        public string Release { get; set; }

        [JsonProperty("production")]
        public List<string> Production { get; set; }

        [JsonProperty("streamingData")]
        public StreamingData StreamingData { get; set; }

        public static Song FromNameValueCollection(NameValueCollection collection)
        {
            var song = new Song();

            var playerResponse = collection.Get("player_response");
            if (playerResponse == null)
            {
                // no results
                return song;
            }

            var playerResponseObj = JsonConvert.DeserializeObject<JObject>(playerResponse);
            song = JsonConvert.DeserializeObject<Song>(playerResponseObj["videoDetails"].ToString());
            song.StreamingData = JsonConvert.DeserializeObject<StreamingData>(playerResponseObj["streamingData"].ToString());

            if (song.ShortDescription.EndsWith("Auto-generated by YouTube."))
            {
                List<string> parts = StaticUtils.StringSplit(song.ShortDescription, "\n\n");
                song.Provider = parts[0].Replace("Provided to YouTube by ", "");
                song.Artists = StaticUtils.StringSplit(parts[1], " . ");
                song.Copyright = parts[3];

                if (parts.Count >= 5)
                {
                    song.Release = parts[4].Replace("Released on: ", "");
                }

                if (parts.Count >= 6)
                {
                    song.Production = new List<string>(parts[5].Split('\n'));
                }
            }

            return song;
        }
    }

    public class Format
    {
        [JsonProperty("itag")]
        public int Itag { get; set; }

        [JsonProperty("mimeType")]
        public string MimeType { get; set; }

        [JsonProperty("bitrate")]
        public int Bitrate { get; set; }

        [JsonProperty("width")]
        public int Width { get; set; }

        [JsonProperty("height")]
        public int Height { get; set; }

        [JsonProperty("lastModified")]
        public string LastModified { get; set; }

        [JsonProperty("contentLength")]
        public string ContentLength { get; set; }

        [JsonProperty("quality")]
        public string Quality { get; set; }

        [JsonProperty("fps")]
        public int Fps { get; set; }

        [JsonProperty("qualityLabel")]
        public string QualityLabel { get; set; }

        [JsonProperty("projectionType")]
        public string ProjectionType { get; set; }

        [JsonProperty("averageBitrate")]
        public int AverageBitrate { get; set; }

        [JsonProperty("audioQuality")]
        public string AudioQuality { get; set; }

        [JsonProperty("approxDurationMs")]
        public string ApproxDurationMs { get; set; }

        [JsonProperty("audioSampleRate")]
        public string AudioSampleRate { get; set; }

        [JsonProperty("audioChannels")]
        public int AudioChannels { get; set; }

        [JsonProperty("signatureCipher")]
        public string SignatureCipher { get; set; }
    }

    public class InitRange
    {
        [JsonProperty("start")]
        public string Start { get; set; }

        [JsonProperty("end")]
        public string End { get; set; }
    }

    public class IndexRange
    {
        [JsonProperty("start")]
        public string Start { get; set; }

        [JsonProperty("end")]
        public string End { get; set; }
    }

    public class ColorInfo
    {
        [JsonProperty("primaries")]
        public string Primaries { get; set; }

        [JsonProperty("transferCharacteristics")]
        public string TransferCharacteristics { get; set; }

        [JsonProperty("matrixCoefficients")]
        public string MatrixCoefficients { get; set; }
    }

    public class AdaptiveFormat
    {
        [JsonProperty("itag")]
        public int Itag { get; set; }

        [JsonProperty("mimeType")]
        public string MimeType { get; set; }

        [JsonProperty("bitrate")]
        public int Bitrate { get; set; }

        [JsonProperty("width")]
        public int Width { get; set; }

        [JsonProperty("height")]
        public int Height { get; set; }

        [JsonProperty("initRange")]
        public InitRange InitRange { get; set; }

        [JsonProperty("indexRange")]
        public IndexRange IndexRange { get; set; }

        [JsonProperty("lastModified")]
        public string LastModified { get; set; }

        [JsonProperty("contentLength")]
        public string ContentLength { get; set; }

        [JsonProperty("quality")]
        public string Quality { get; set; }

        [JsonProperty("fps")]
        public int Fps { get; set; }

        [JsonProperty("qualityLabel")]
        public string QualityLabel { get; set; }

        [JsonProperty("projectionType")]
        public string ProjectionType { get; set; }

        [JsonProperty("averageBitrate")]
        public int AverageBitrate { get; set; }

        [JsonProperty("approxDurationMs")]
        public string ApproxDurationMs { get; set; }

        [JsonProperty("signatureCipher")]
        public string SignatureCipher { get; set; }

        [JsonProperty("colorInfo")]
        public ColorInfo ColorInfo { get; set; }

        [JsonProperty("highReplication")]
        public string HighReplication { get; set; }

        [JsonProperty("audioQuality")]
        public string AudioQuality { get; set; }

        [JsonProperty("audioSampleRate")]
        public string AudioSampleRate { get; set; }

        [JsonProperty("audioChannels")]
        public int? AudioChannels { get; set; }
    }

    public class StreamingData
    {
        [JsonProperty("expiresInSeconds")]
        public string ExpiresInSeconds { get; set; }

        [JsonProperty("formats")]
        public List<Format> Formats { get; set; }

        [JsonProperty("adaptiveFormats")]
        public List<AdaptiveFormat> AdaptiveFormats { get; set; }
    }


}
